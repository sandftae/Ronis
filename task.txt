Привет!
Получил такое ТЗ.
Нужно написать приложение, которое будет состоять из frontend и backend частей.
На frontend должна показываться страница с Javascript ротатором баннеров (картинок с ссылками).
В backend должно быть реализовано:
   - авторизация (login/logout) пользователей по базе данных;
   - редактирование списка баннеров;
   - редактирование порядка отображения баннеров (кнопки "переместить вверх/вниз");
   - создание новых баннеров (кнопка "добавить");
   - удаление существующих баннеров (кнопка "удалить");

Баннер содержит следующую информацию:
   - Название;
   - Картинка;
   - URL;
   - Статус;

Загружаемые картинки должны приводится к одному и тому же уменьшенному размеру.
На формах в редакторе должна быть проверка на правильность заполнения.
Для проекта нельзя использовать готовые php framework'и. 
Необходимо построить минимальный MVC framework с использованием ООП.
Для работы с БД можно использовать PDO либо свой класс.

В проекте желательно использовать библиотеки:
   - Twitter Bootstrap (для стилей админки);
   - FlexSlider;



/==========================================================
/**********************************************************
/==========================================================

КОММЕНТАРИИ 

/==========================================================
/**********************************************************
/==========================================================

Для выполнения задания был построен небольшой фреймверк.
Модель построения работы web-приложения - MVC.
Модель работы с деревом сайта (отображение ссылок) - ЧПУ.
Вся модель самописная и много нового и написанного в коде
узнавал уже в процессе поиска информации в сети.

В web-приложении реализованы все необходимые функции по ТЗ:
1) Авторизация (login/logout) пользователей по базе данных.
   Предполагается, что пользователь - это  админ.

2) Редактирование списка баннеров.
   Возможно изменить название, позицию, URL, картину.

3) Редактирование порядка отображения баннеров (кнопки "переместить вверх/вниз").
   Данное действие - перемещение - не меняет порядка отображения
   баннера в списке баннеров,  которые выводятся админу. Это
   действие ИЗМЕНЕЯЕТ последовательность отображения баннеров
   во самом слайдере при перезагрузке его. Предполагается,
   что у админа должна быть возможность влиять на то, что и 
   в какой последовательности показывать клиенту/пользователю.
   ОЧЕНЬ ВАЖНО: админ не должен нарушать логическое присутствие
   набора чисел указанным им в порядке для отображения и они не должны повторяться.
   Данные числа должны иметь возможность быть выстроенными по возрастанию
   от меньшего к большему. Это и есть логика отображения баннеров 
   пользователю. допускается разброс чисел в последовательности.
   ПРИМЕР вводимых админом чисел:
	1) допускается такой ввод: 
		[ 1 , 5 , 3 , 4 , 2] и это == [1 , 2 , 3 , 4 , 5].
	2) не верный ввод:
		[1 , 777 , 34 , 34 , 13 , 6].
  В случает со вторым вариантом ввода чисел, набор методов 
  модели UPLOAD будут генерировать отдельный массив с специальным
  набором чисел, которые будут заменять вводимые числа из второго варианта,
  перезаписывать их в БД, и передавать в слайдер. В данном массиве будет
  составлен отдельный порядок чисел по возрастанию. Эта модель 
  будет исправлять допущенные ошибки админом. Однако она НЕ ЕСТЬ гарантом того,
  что слайдер отобразит нужную последовательность. Она предпринимает попытку
  исправить ошибку.

4) Создание новых баннеров (кнопка "добавить").

5) Удаление существующих баннеров (кнопка "удалить").

6) Баннер содержит следующую информацию:
   - Название;
   - Картинка;
   - URL;
   - Статус;

7) Присутствует валидация всех вводимых пользователем текстовы данных.

8) Присутствует валидация всех вводимых пользователем графических файлов.

9) Изображения "подгоняются" под необходимые параметры высоты и ширины с
висчетом процентной зависимости высоты и ширины в реальных размерах и
перенос этого соотнощения под заданные макссимальные границы высоты и ширины.
В конфигурационном файле сейчас установлены максимальные размеры высоты и
ширины как 400рх * 400рх. Также уменьшается обьем изображения.

Для работы с БД использовалось расширение PDO. Был создан отдельный 
класс-обертка, который позволяет работать с БД.

Также был использован Bootstrap для стилей админки и видимой части
для пользователя. Был также использован FlexSlider.
В коде есть немного JS, т.к. некоторые задачи в процессе работы
с файлами для view мог решить только при помощи JS (так, что-бы не 
навредить имеющимся результатам).

ДОПОЛЬНИТЕЛЬНО:
Предположил, что будет хорошо создать админку максимально приближенную
к реальности и добавить в нее возможность работы со статьями; возможность
получать от пользователя письма а им писать администрации сайта.
Есть еще такой функционал:
1) Статьи:
   - добавление;
   - обновление;
   - создание;

2) сообщения от пользователей:
   - чтение без удаления;

3) НАПИСАТЬ:
   - каждый не зарегистрированный пользователь может написать 
   сообщение.

/======================
В файловой системе есть несколько картинок в папке Images. 
Они необходимы для показа работы FlexSlider`а.
login - admin .
password - azino_three_axes_777 .











